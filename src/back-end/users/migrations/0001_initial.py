# Generated by Django 5.0.3 on 2024-03-12 14:39

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GameServerModel',
            fields=[
                ('serverId', models.AutoField(primary_key=True, serialize=False)),
                ('serverAddr', models.CharField(max_length=20)),
                ('firstPlayerAddr', models.CharField(default=0, max_length=20)),
                ('secondPlayerAddr', models.CharField(default=0, max_length=20)),
                ('state', models.CharField(max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='HistoryModel',
            fields=[
                ('gameId', models.AutoField(primary_key=True, serialize=False)),
                ('userId', models.IntegerField()),
                ('userUsername', models.CharField(max_length=50)),
                ('opponentId', models.IntegerField()),
                ('opponentUsername', models.CharField(max_length=50)),
                ('userScore', models.IntegerField()),
                ('opponentScore', models.IntegerField()),
                ('isWin', models.BooleanField()),
                ('gameDate', models.DateField()),
                ('gameTime', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='appuser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('username', models.CharField(max_length=50)),
                ('nbGamePlayed', models.IntegerField(default=0)),
                ('nbGameWin', models.IntegerField(default=0)),
                ('nbGameLose', models.IntegerField(default=0)),
                ('nbTouchedBall', models.IntegerField(default=0)),
                ('nbAce', models.IntegerField(default=0)),
                ('LongestExchange', models.IntegerField(default=0)),
                ('nbPointMarked', models.IntegerField(default=0)),
                ('nbPointLose', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
